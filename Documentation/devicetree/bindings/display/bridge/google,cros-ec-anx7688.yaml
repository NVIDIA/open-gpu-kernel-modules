# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/display/bridge/google,cros-ec-anx7688.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: ChromeOS EC ANX7688 HDMI to DP Converter through Type-C Port

maintainers:
  - Nicolas Boichat <drinkcat@chromium.org>
  - Enric Balletbo i Serra <enric.balletbo@collabora.com>

description: |
  ChromeOS EC ANX7688 is a display bridge that converts HDMI 2.0 to
  DisplayPort 1.3 Ultra-HDi (4096x2160p60). It is an Analogix ANX7688 chip
  which is connected to and operated by the ChromeOS Embedded Controller
  (See google,cros-ec.yaml). It is accessed using I2C tunneling through
  the EC and therefore its node should be a child of an EC I2C tunnel node
  (See google,cros-ec-i2c-tunnel.yaml).

properties:
  compatible:
    const: google,cros-ec-anx7688

  reg:
    maxItems: 1
    description: I2C address of the device.

  ports:
    $ref: /schemas/graph.yaml#/properties/ports

    properties:
      port@0:
        $ref: /schemas/graph.yaml#/properties/port
        description: Video port for HDMI input.

      port@1:
        $ref: /schemas/graph.yaml#/properties/port
        description: USB Type-c connector.

    required:
      - port@0
      - port@1

required:
  - compatible
  - reg
  - ports

additionalProperties: false

examples:
  - |
    i2c_tunnel_b: i2c-tunnel1 {
        compatible = "google,cros-ec-i2c-tunnel";
        google,remote-bus = <1>;
        #address-cells = <1>;
        #size-cells = <0>;

        anx7688: anx7688@2c {
            compatible = "google,cros-ec-anx7688";
            reg = <0x2c>;

            ports {
                #address-cells = <1>;
                #size-cells = <0>;
                port@0 {
                    reg = <0>;
                    anx7688_in: endpoint {
                        remote-endpoint = <&hdmi0_out>;
                    };
                };
                port@1 {
                    reg = <1>;
                    anx7688_out: endpoint {
                        remote-endpoint = <&typec_connector>;
                    };
                };
            };
        };
    };

