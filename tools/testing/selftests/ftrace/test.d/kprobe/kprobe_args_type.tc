#!/bin/sh
# SPDX-License-Identifier: GPL-2.0
# description: Kprobes event arguments with types
# requires: kprobe_events "x8/16/32/64":README

gen_event() { # Bitsize
  echo "p:testprobe $FUNCTION_FORK \$stack0:s$1 \$stack0:u$1 \$stack0:x$1 \$stack0:b4@4/$1"
}

check_types() { # s-type u-type x-type bf-type width
  test $# -eq 5
  CW=$5
  CW=$((CW / 4))
  X1=`printf "%x" $1 | tail -c ${CW}`
  X2=`printf "%x" $2`
  X3=`printf "%x" $3`
  test $X1 = $X2
  test $X2 = $X3
  test 0x$X3 = $3

  B4=`printf "%1x" $4`
  B3=`printf "%03x" 0x$X3 | tail -c 2 | head -c 1`
  test $B3 = $B4
}

for width in 64 32 16 8; do
  : "Add new event with basic types"
  gen_event $width > kprobe_events
  grep testprobe kprobe_events
  test -d events/kprobes/testprobe

  : "Trace the event"
  echo 1 > events/kprobes/testprobe/enable
  ( echo "forked")
  echo 0 > events/kprobes/testprobe/enable

  : "Confirm the arguments is recorded in given types correctly"
  ARGS=`grep "testprobe" trace | head -n 1 | sed -e 's/.* arg1=\(.*\) arg2=\(.*\) arg3=\(.*\) arg4=\(.*\)/\1 \2 \3 \4/'`
  check_types $ARGS $width

  : "Clear event for next loop"
  echo "-:testprobe" >> kprobe_events
  clear_trace

done

exit_pass
