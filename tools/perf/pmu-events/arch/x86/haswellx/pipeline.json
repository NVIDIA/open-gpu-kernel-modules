[
    {
        "UMask": "0x1",
        "BriefDescription": "Instructions retired from execution.",
        "Counter": "Fixed counter 0",
        "EventName": "INST_RETIRED.ANY",
        "Errata": "HSD140, HSD143",
        "PublicDescription": "This event counts the number of instructions retired from execution. For instructions that consist of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction. Counting continues during hardware interrupts, traps, and inside interrupt handlers. INST_RETIRED.ANY is counted by a designated fixed counter, leaving the programmable counters available for other events. Faulting executions of GETSEC/VM entry/VM Exit/MWait will not count as retired instructions.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "Fixed counter 0"
    },
    {
        "UMask": "0x2",
        "BriefDescription": "Core cycles when the thread is not in halt state.",
        "Counter": "Fixed counter 1",
        "EventName": "CPU_CLK_UNHALTED.THREAD",
        "PublicDescription": "This event counts the number of thread cycles while the thread is not in a halt state. The thread enters the halt state when it is running the HLT instruction. The core frequency may change from time to time due to power or thermal throttling.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "Fixed counter 1"
    },
    {
        "UMask": "0x2",
        "BriefDescription": "Core cycles when at least one thread on the physical core is not in halt state.",
        "Counter": "Fixed counter 1",
        "EventName": "CPU_CLK_UNHALTED.THREAD_ANY",
        "AnyThread": "1",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "Fixed counter 1"
    },
    {
        "UMask": "0x3",
        "BriefDescription": "Reference cycles when the core is not in halt state.",
        "Counter": "Fixed counter 2",
        "EventName": "CPU_CLK_UNHALTED.REF_TSC",
        "PublicDescription": "This event counts the number of reference cycles when the core is not in a halt state. The core enters the halt state when it is running the HLT instruction or the MWAIT instruction. This event is not affected by core frequency changes (for example, P states, TM2 transitions) but has the same incrementing frequency as the time stamp counter. This event can approximate elapsed time while the core was not in a halt state.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "Fixed counter 2"
    },
    {
        "EventCode": "0x03",
        "UMask": "0x2",
        "BriefDescription": "loads blocked by overlapping with store buffer that cannot be forwarded",
        "Counter": "0,1,2,3",
        "EventName": "LD_BLOCKS.STORE_FORWARD",
        "PublicDescription": "This event counts loads that followed a store to the same address, where the data could not be forwarded inside the pipeline from the store to the load.  The most common reason why store forwarding would be blocked is when a load's address range overlaps with a preceding smaller uncompleted store. The penalty for blocked store forwarding is that the load must wait for the store to write its value to the cache before it can be issued.",
        "SampleAfterValue": "100003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x03",
        "UMask": "0x8",
        "BriefDescription": "The number of times that split load operations are temporarily blocked because all resources for handling the split accesses are in use",
        "Counter": "0,1,2,3",
        "EventName": "LD_BLOCKS.NO_SR",
        "PublicDescription": "The number of times that split load operations are temporarily blocked because all resources for handling the split accesses are in use.",
        "SampleAfterValue": "100003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x07",
        "UMask": "0x1",
        "BriefDescription": "False dependencies in MOB due to partial compare on address.",
        "Counter": "0,1,2,3",
        "EventName": "LD_BLOCKS_PARTIAL.ADDRESS_ALIAS",
        "PublicDescription": "Aliasing occurs when a load is issued after a store and their memory addresses are offset by 4K.  This event counts the number of loads that aliased with a preceding store, resulting in an extended address check in the pipeline which can have a performance impact.",
        "SampleAfterValue": "100003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x0D",
        "UMask": "0x3",
        "BriefDescription": "Core cycles the allocator was stalled due to recovery from earlier clear event for this thread (e.g. misprediction or memory nuke)",
        "Counter": "0,1,2,3",
        "EventName": "INT_MISC.RECOVERY_CYCLES",
        "CounterMask": "1",
        "PublicDescription": "This event counts the number of cycles spent waiting for a recovery after an event such as a processor nuke, JEClear, assist, hle/rtm abort etc.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x0D",
        "UMask": "0x3",
        "BriefDescription": "Core cycles the allocator was stalled due to recovery from earlier clear event for any thread running on the physical core (e.g. misprediction or memory nuke)",
        "Counter": "0,1,2,3",
        "EventName": "INT_MISC.RECOVERY_CYCLES_ANY",
        "AnyThread": "1",
        "CounterMask": "1",
        "PublicDescription": "Core cycles the allocator was stalled due to recovery from earlier clear event for any thread running on the physical core (e.g. misprediction or memory nuke).",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x0E",
        "UMask": "0x1",
        "BriefDescription": "Uops that Resource Allocation Table (RAT) issues to Reservation Station (RS)",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_ISSUED.ANY",
        "PublicDescription": "This event counts the number of uops issued by the Front-end of the pipeline to the Back-end. This event is counted at the allocation stage and will count both retired and non-retired uops.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "Invert": "1",
        "EventCode": "0x0E",
        "UMask": "0x1",
        "BriefDescription": "Cycles when Resource Allocation Table (RAT) does not issue Uops to Reservation Station (RS) for the thread.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_ISSUED.STALL_CYCLES",
        "CounterMask": "1",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "Invert": "1",
        "EventCode": "0x0E",
        "UMask": "0x1",
        "BriefDescription": "Cycles when Resource Allocation Table (RAT) does not issue Uops to Reservation Station (RS) for all threads.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_ISSUED.CORE_STALL_CYCLES",
        "AnyThread": "1",
        "CounterMask": "1",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "EventCode": "0x0E",
        "UMask": "0x10",
        "BriefDescription": "Number of flags-merge uops being allocated. Such uops considered perf sensitive; added by GSR u-arch.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_ISSUED.FLAGS_MERGE",
        "PublicDescription": "Number of flags-merge uops allocated. Such uops add delay.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x0E",
        "UMask": "0x20",
        "BriefDescription": "Number of slow LEA uops being allocated. A uop is generally considered SlowLea if it has 3 sources (e.g. 2 sources + immediate) regardless if as a result of LEA instruction or not.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_ISSUED.SLOW_LEA",
        "PublicDescription": "Number of slow LEA or similar uops allocated. Such uop has 3 sources (for example, 2 sources + immediate) regardless of whether it is a result of LEA instruction or not.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x0E",
        "UMask": "0x40",
        "BriefDescription": "Number of Multiply packed/scalar single precision uops allocated",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_ISSUED.SINGLE_MUL",
        "PublicDescription": "Number of multiply packed/scalar single precision uops allocated.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x14",
        "UMask": "0x2",
        "BriefDescription": "Any uop executed by the Divider. (This includes all divide uops, sqrt, ...)",
        "Counter": "0,1,2,3",
        "EventName": "ARITH.DIVIDER_UOPS",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x3C",
        "UMask": "0x0",
        "BriefDescription": "Thread cycles when thread is not in halt state",
        "Counter": "0,1,2,3",
        "EventName": "CPU_CLK_UNHALTED.THREAD_P",
        "PublicDescription": "Counts the number of thread cycles while the thread is not in a halt state. The thread enters the halt state when it is running the HLT instruction. The core frequency may change from time to time due to power or thermal throttling.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x3C",
        "UMask": "0x0",
        "BriefDescription": "Core cycles when at least one thread on the physical core is not in halt state.",
        "Counter": "0,1,2,3",
        "EventName": "CPU_CLK_UNHALTED.THREAD_P_ANY",
        "AnyThread": "1",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x3C",
        "UMask": "0x1",
        "BriefDescription": "Reference cycles when the thread is unhalted (counts at 100 MHz rate)",
        "Counter": "0,1,2,3",
        "EventName": "CPU_CLK_THREAD_UNHALTED.REF_XCLK",
        "PublicDescription": "Increments at the frequency of XCLK (100 MHz) when not halted.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x3C",
        "UMask": "0x1",
        "BriefDescription": "Reference cycles when the at least one thread on the physical core is unhalted (counts at 100 MHz rate)",
        "Counter": "0,1,2,3",
        "EventName": "CPU_CLK_THREAD_UNHALTED.REF_XCLK_ANY",
        "AnyThread": "1",
        "PublicDescription": "Reference cycles when the at least one thread on the physical core is unhalted (counts at 100 MHz rate).",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x3C",
        "UMask": "0x1",
        "BriefDescription": "Reference cycles when the thread is unhalted (counts at 100 MHz rate)",
        "Counter": "0,1,2,3",
        "EventName": "CPU_CLK_UNHALTED.REF_XCLK",
        "PublicDescription": "Reference cycles when the thread is unhalted. (counts at 100 MHz rate)",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x3C",
        "UMask": "0x1",
        "BriefDescription": "Reference cycles when the at least one thread on the physical core is unhalted (counts at 100 MHz rate)",
        "Counter": "0,1,2,3",
        "EventName": "CPU_CLK_UNHALTED.REF_XCLK_ANY",
        "AnyThread": "1",
        "PublicDescription": "Reference cycles when the at least one thread on the physical core is unhalted (counts at 100 MHz rate).",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x3c",
        "UMask": "0x2",
        "BriefDescription": "Count XClk pulses when this thread is unhalted and the other thread is halted.",
        "Counter": "0,1,2,3",
        "EventName": "CPU_CLK_THREAD_UNHALTED.ONE_THREAD_ACTIVE",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "EventCode": "0x3C",
        "UMask": "0x2",
        "BriefDescription": "Count XClk pulses when this thread is unhalted and the other thread is halted.",
        "Counter": "0,1,2,3",
        "EventName": "CPU_CLK_UNHALTED.ONE_THREAD_ACTIVE",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x4c",
        "UMask": "0x1",
        "BriefDescription": "Not software-prefetch load dispatches that hit FB allocated for software prefetch",
        "Counter": "0,1,2,3",
        "EventName": "LOAD_HIT_PRE.SW_PF",
        "PublicDescription": "Non-SW-prefetch load dispatches that hit fill buffer allocated for S/W prefetch.",
        "SampleAfterValue": "100003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x4c",
        "UMask": "0x2",
        "BriefDescription": "Not software-prefetch load dispatches that hit FB allocated for hardware prefetch",
        "Counter": "0,1,2,3",
        "EventName": "LOAD_HIT_PRE.HW_PF",
        "PublicDescription": "Non-SW-prefetch load dispatches that hit fill buffer allocated for H/W prefetch.",
        "SampleAfterValue": "100003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x58",
        "UMask": "0x1",
        "BriefDescription": "Number of integer Move Elimination candidate uops that were eliminated.",
        "Counter": "0,1,2,3",
        "EventName": "MOVE_ELIMINATION.INT_ELIMINATED",
        "PublicDescription": "Number of integer move elimination candidate uops that were eliminated.",
        "SampleAfterValue": "1000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x58",
        "UMask": "0x2",
        "BriefDescription": "Number of SIMD Move Elimination candidate uops that were eliminated.",
        "Counter": "0,1,2,3",
        "EventName": "MOVE_ELIMINATION.SIMD_ELIMINATED",
        "PublicDescription": "Number of SIMD move elimination candidate uops that were eliminated.",
        "SampleAfterValue": "1000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x58",
        "UMask": "0x4",
        "BriefDescription": "Number of integer Move Elimination candidate uops that were not eliminated.",
        "Counter": "0,1,2,3",
        "EventName": "MOVE_ELIMINATION.INT_NOT_ELIMINATED",
        "PublicDescription": "Number of integer move elimination candidate uops that were not eliminated.",
        "SampleAfterValue": "1000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x58",
        "UMask": "0x8",
        "BriefDescription": "Number of SIMD Move Elimination candidate uops that were not eliminated.",
        "Counter": "0,1,2,3",
        "EventName": "MOVE_ELIMINATION.SIMD_NOT_ELIMINATED",
        "PublicDescription": "Number of SIMD move elimination candidate uops that were not eliminated.",
        "SampleAfterValue": "1000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x5E",
        "UMask": "0x1",
        "BriefDescription": "Cycles when Reservation Station (RS) is empty for the thread",
        "Counter": "0,1,2,3",
        "EventName": "RS_EVENTS.EMPTY_CYCLES",
        "PublicDescription": "This event counts cycles when the Reservation Station ( RS ) is empty for the thread. The RS is a structure that buffers allocated micro-ops from the Front-end. If there are many cycles when the RS is empty, it may represent an underflow of instructions delivered from the Front-end.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EdgeDetect": "1",
        "Invert": "1",
        "EventCode": "0x5E",
        "UMask": "0x1",
        "BriefDescription": "Counts end of periods where the Reservation Station (RS) was empty. Could be useful to precisely locate Frontend Latency Bound issues.",
        "Counter": "0,1,2,3",
        "EventName": "RS_EVENTS.EMPTY_END",
        "CounterMask": "1",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x87",
        "UMask": "0x1",
        "BriefDescription": "Stalls caused by changing prefix length of the instruction.",
        "Counter": "0,1,2,3",
        "EventName": "ILD_STALL.LCP",
        "PublicDescription": "This event counts cycles where the decoder is stalled on an instruction with a length changing prefix (LCP).",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x87",
        "UMask": "0x4",
        "BriefDescription": "Stall cycles because IQ is full",
        "Counter": "0,1,2,3",
        "EventName": "ILD_STALL.IQ_FULL",
        "PublicDescription": "Stall cycles due to IQ is full.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x88",
        "UMask": "0x41",
        "BriefDescription": "Not taken macro-conditional branches.",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_EXEC.NONTAKEN_CONDITIONAL",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x88",
        "UMask": "0x81",
        "BriefDescription": "Taken speculative and retired macro-conditional branches.",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_EXEC.TAKEN_CONDITIONAL",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x88",
        "UMask": "0x82",
        "BriefDescription": "Taken speculative and retired macro-conditional branch instructions excluding calls and indirects.",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_EXEC.TAKEN_DIRECT_JUMP",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x88",
        "UMask": "0x84",
        "BriefDescription": "Taken speculative and retired indirect branches excluding calls and returns.",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_EXEC.TAKEN_INDIRECT_JUMP_NON_CALL_RET",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x88",
        "UMask": "0x88",
        "BriefDescription": "Taken speculative and retired indirect branches with return mnemonic.",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_EXEC.TAKEN_INDIRECT_NEAR_RETURN",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x88",
        "UMask": "0x90",
        "BriefDescription": "Taken speculative and retired direct near calls.",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_EXEC.TAKEN_DIRECT_NEAR_CALL",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x88",
        "UMask": "0xa0",
        "BriefDescription": "Taken speculative and retired indirect calls.",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_EXEC.TAKEN_INDIRECT_NEAR_CALL",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x88",
        "UMask": "0xc1",
        "BriefDescription": "Speculative and retired macro-conditional branches.",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_EXEC.ALL_CONDITIONAL",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x88",
        "UMask": "0xc2",
        "BriefDescription": "Speculative and retired macro-unconditional branches excluding calls and indirects.",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_EXEC.ALL_DIRECT_JMP",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x88",
        "UMask": "0xc4",
        "BriefDescription": "Speculative and retired indirect branches excluding calls and returns.",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_EXEC.ALL_INDIRECT_JUMP_NON_CALL_RET",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x88",
        "UMask": "0xc8",
        "BriefDescription": "Speculative and retired indirect return branches.",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_EXEC.ALL_INDIRECT_NEAR_RETURN",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x88",
        "UMask": "0xd0",
        "BriefDescription": "Speculative and retired direct near calls.",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_EXEC.ALL_DIRECT_NEAR_CALL",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x88",
        "UMask": "0xff",
        "BriefDescription": "Speculative and retired  branches",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_EXEC.ALL_BRANCHES",
        "PublicDescription": "Counts all near executed branches (not necessarily retired).",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x89",
        "UMask": "0x41",
        "BriefDescription": "Not taken speculative and retired mispredicted macro conditional branches.",
        "Counter": "0,1,2,3",
        "EventName": "BR_MISP_EXEC.NONTAKEN_CONDITIONAL",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x89",
        "UMask": "0x81",
        "BriefDescription": "Taken speculative and retired mispredicted macro conditional branches.",
        "Counter": "0,1,2,3",
        "EventName": "BR_MISP_EXEC.TAKEN_CONDITIONAL",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x89",
        "UMask": "0x84",
        "BriefDescription": "Taken speculative and retired mispredicted indirect branches excluding calls and returns.",
        "Counter": "0,1,2,3",
        "EventName": "BR_MISP_EXEC.TAKEN_INDIRECT_JUMP_NON_CALL_RET",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x89",
        "UMask": "0x88",
        "BriefDescription": "Taken speculative and retired mispredicted indirect branches with return mnemonic.",
        "Counter": "0,1,2,3",
        "EventName": "BR_MISP_EXEC.TAKEN_RETURN_NEAR",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x89",
        "UMask": "0xa0",
        "BriefDescription": "Taken speculative and retired mispredicted indirect calls.",
        "Counter": "0,1,2,3",
        "EventName": "BR_MISP_EXEC.TAKEN_INDIRECT_NEAR_CALL",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x89",
        "UMask": "0xc1",
        "BriefDescription": "Speculative and retired mispredicted macro conditional branches.",
        "Counter": "0,1,2,3",
        "EventName": "BR_MISP_EXEC.ALL_CONDITIONAL",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x89",
        "UMask": "0xc4",
        "BriefDescription": "Mispredicted indirect branches excluding calls and returns.",
        "Counter": "0,1,2,3",
        "EventName": "BR_MISP_EXEC.ALL_INDIRECT_JUMP_NON_CALL_RET",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0x89",
        "UMask": "0xff",
        "BriefDescription": "Speculative and retired mispredicted macro conditional branches",
        "Counter": "0,1,2,3",
        "EventName": "BR_MISP_EXEC.ALL_BRANCHES",
        "PublicDescription": "Counts all near executed branches (not necessarily retired).",
        "SampleAfterValue": "200003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x1",
        "BriefDescription": "Cycles per thread when uops are executed in port 0",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED_PORT.PORT_0",
        "PublicDescription": "Cycles which a uop is dispatched on port 0 in this thread.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x1",
        "BriefDescription": "Cycles per core when uops are executed in port 0.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED_PORT.PORT_0_CORE",
        "AnyThread": "1",
        "PublicDescription": "Cycles per core when uops are exectuted in port 0.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x1",
        "BriefDescription": "Cycles per thread when uops are executed in port 0.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_DISPATCHED_PORT.PORT_0",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x2",
        "BriefDescription": "Cycles per thread when uops are executed in port 1",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED_PORT.PORT_1",
        "PublicDescription": "Cycles which a uop is dispatched on port 1 in this thread.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x2",
        "BriefDescription": "Cycles per core when uops are executed in port 1.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED_PORT.PORT_1_CORE",
        "AnyThread": "1",
        "PublicDescription": "Cycles per core when uops are exectuted in port 1.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x2",
        "BriefDescription": "Cycles per thread when uops are executed in port 1.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_DISPATCHED_PORT.PORT_1",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x4",
        "BriefDescription": "Cycles per thread when uops are executed in port 2",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED_PORT.PORT_2",
        "PublicDescription": "Cycles which a uop is dispatched on port 2 in this thread.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x4",
        "BriefDescription": "Cycles per core when uops are dispatched to port 2.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED_PORT.PORT_2_CORE",
        "AnyThread": "1",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x4",
        "BriefDescription": "Cycles per thread when uops are executed in port 2.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_DISPATCHED_PORT.PORT_2",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x8",
        "BriefDescription": "Cycles per thread when uops are executed in port 3",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED_PORT.PORT_3",
        "PublicDescription": "Cycles which a uop is dispatched on port 3 in this thread.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x8",
        "BriefDescription": "Cycles per core when uops are dispatched to port 3.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED_PORT.PORT_3_CORE",
        "AnyThread": "1",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x8",
        "BriefDescription": "Cycles per thread when uops are executed in port 3.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_DISPATCHED_PORT.PORT_3",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x10",
        "BriefDescription": "Cycles per thread when uops are executed in port 4",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED_PORT.PORT_4",
        "PublicDescription": "Cycles which a uop is dispatched on port 4 in this thread.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x10",
        "BriefDescription": "Cycles per core when uops are executed in port 4.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED_PORT.PORT_4_CORE",
        "AnyThread": "1",
        "PublicDescription": "Cycles per core when uops are exectuted in port 4.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x10",
        "BriefDescription": "Cycles per thread when uops are executed in port 4.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_DISPATCHED_PORT.PORT_4",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x20",
        "BriefDescription": "Cycles per thread when uops are executed in port 5",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED_PORT.PORT_5",
        "PublicDescription": "Cycles which a uop is dispatched on port 5 in this thread.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x20",
        "BriefDescription": "Cycles per core when uops are executed in port 5.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED_PORT.PORT_5_CORE",
        "AnyThread": "1",
        "PublicDescription": "Cycles per core when uops are exectuted in port 5.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x20",
        "BriefDescription": "Cycles per thread when uops are executed in port 5.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_DISPATCHED_PORT.PORT_5",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x40",
        "BriefDescription": "Cycles per thread when uops are executed in port 6",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED_PORT.PORT_6",
        "PublicDescription": "Cycles which a uop is dispatched on port 6 in this thread.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x40",
        "BriefDescription": "Cycles per core when uops are executed in port 6.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED_PORT.PORT_6_CORE",
        "AnyThread": "1",
        "PublicDescription": "Cycles per core when uops are exectuted in port 6.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x40",
        "BriefDescription": "Cycles per thread when uops are executed in port 6.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_DISPATCHED_PORT.PORT_6",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x80",
        "BriefDescription": "Cycles per thread when uops are executed in port 7",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED_PORT.PORT_7",
        "PublicDescription": "Cycles which a uop is dispatched on port 7 in this thread.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x80",
        "BriefDescription": "Cycles per core when uops are dispatched to port 7.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED_PORT.PORT_7_CORE",
        "AnyThread": "1",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA1",
        "UMask": "0x80",
        "BriefDescription": "Cycles per thread when uops are executed in port 7.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_DISPATCHED_PORT.PORT_7",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA2",
        "UMask": "0x1",
        "BriefDescription": "Resource-related stall cycles",
        "Counter": "0,1,2,3",
        "EventName": "RESOURCE_STALLS.ANY",
        "Errata": "HSD135",
        "PublicDescription": "Cycles allocation is stalled due to resource related reason.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA2",
        "UMask": "0x4",
        "BriefDescription": "Cycles stalled due to no eligible RS entry available.",
        "Counter": "0,1,2,3",
        "EventName": "RESOURCE_STALLS.RS",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA2",
        "UMask": "0x8",
        "BriefDescription": "Cycles stalled due to no store buffers available. (not including draining form sync).",
        "Counter": "0,1,2,3",
        "EventName": "RESOURCE_STALLS.SB",
        "PublicDescription": "This event counts cycles during which no instructions were allocated because no Store Buffers (SB) were available.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA2",
        "UMask": "0x10",
        "BriefDescription": "Cycles stalled due to re-order buffer full.",
        "Counter": "0,1,2,3",
        "EventName": "RESOURCE_STALLS.ROB",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA3",
        "UMask": "0x1",
        "BriefDescription": "Cycles with pending L2 cache miss loads.",
        "Counter": "0,1,2,3",
        "EventName": "CYCLE_ACTIVITY.CYCLES_L2_PENDING",
        "CounterMask": "1",
        "Errata": "HSD78",
        "PublicDescription": "Cycles with pending L2 miss loads. Set Cmask=2 to count cycle.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA3",
        "UMask": "0x2",
        "BriefDescription": "Cycles with pending memory loads.",
        "Counter": "0,1,2,3",
        "EventName": "CYCLE_ACTIVITY.CYCLES_LDM_PENDING",
        "CounterMask": "2",
        "PublicDescription": "Cycles with pending memory loads. Set Cmask=2 to count cycle.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "EventCode": "0xA3",
        "UMask": "0x4",
        "BriefDescription": "This event increments by 1 for every cycle where there was no execute for this thread.",
        "Counter": "0,1,2,3",
        "EventName": "CYCLE_ACTIVITY.CYCLES_NO_EXECUTE",
        "CounterMask": "4",
        "PublicDescription": "This event counts cycles during which no instructions were executed in the execution stage of the pipeline.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "EventCode": "0xA3",
        "UMask": "0x5",
        "BriefDescription": "Execution stalls due to L2 cache misses.",
        "Counter": "0,1,2,3",
        "EventName": "CYCLE_ACTIVITY.STALLS_L2_PENDING",
        "CounterMask": "5",
        "PublicDescription": "Number of loads missed L2.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "EventCode": "0xA3",
        "UMask": "0x6",
        "BriefDescription": "Execution stalls due to memory subsystem.",
        "Counter": "0,1,2,3",
        "EventName": "CYCLE_ACTIVITY.STALLS_LDM_PENDING",
        "CounterMask": "6",
        "PublicDescription": "This event counts cycles during which no instructions were executed in the execution stage of the pipeline and there were memory instructions pending (waiting for data).",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "EventCode": "0xA3",
        "UMask": "0x8",
        "BriefDescription": "Cycles with pending L1 cache miss loads.",
        "Counter": "2",
        "EventName": "CYCLE_ACTIVITY.CYCLES_L1D_PENDING",
        "CounterMask": "8",
        "PublicDescription": "Cycles with pending L1 data cache miss loads. Set Cmask=8 to count cycle.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "2"
    },
    {
        "EventCode": "0xA3",
        "UMask": "0xc",
        "BriefDescription": "Execution stalls due to L1 data cache misses",
        "Counter": "2",
        "EventName": "CYCLE_ACTIVITY.STALLS_L1D_PENDING",
        "CounterMask": "12",
        "PublicDescription": "Execution stalls due to L1 data cache miss loads. Set Cmask=0CH.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "2"
    },
    {
        "EventCode": "0xa8",
        "UMask": "0x1",
        "BriefDescription": "Number of Uops delivered by the LSD.",
        "Counter": "0,1,2,3",
        "EventName": "LSD.UOPS",
        "PublicDescription": "Number of uops delivered by the LSD.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA8",
        "UMask": "0x1",
        "BriefDescription": "Cycles Uops delivered by the LSD, but didn't come from the decoder.",
        "Counter": "0,1,2,3",
        "EventName": "LSD.CYCLES_ACTIVE",
        "CounterMask": "1",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xA8",
        "UMask": "0x1",
        "BriefDescription": "Cycles 4 Uops delivered by the LSD, but didn't come from the decoder.",
        "Counter": "0,1,2,3",
        "EventName": "LSD.CYCLES_4_UOPS",
        "CounterMask": "4",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "Invert": "1",
        "EventCode": "0xB1",
        "UMask": "0x1",
        "BriefDescription": "Counts number of cycles no uops were dispatched to be executed on this thread.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED.STALL_CYCLES",
        "CounterMask": "1",
        "Errata": "HSD144, HSD30, HSM31",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "EventCode": "0xB1",
        "UMask": "0x1",
        "BriefDescription": "Cycles where at least 1 uop was executed per-thread",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED.CYCLES_GE_1_UOP_EXEC",
        "CounterMask": "1",
        "Errata": "HSD144, HSD30, HSM31",
        "PublicDescription": "This events counts the cycles where at least one uop was executed. It is counted per thread.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "EventCode": "0xB1",
        "UMask": "0x1",
        "BriefDescription": "Cycles where at least 2 uops were executed per-thread",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED.CYCLES_GE_2_UOPS_EXEC",
        "CounterMask": "2",
        "Errata": "HSD144, HSD30, HSM31",
        "PublicDescription": "This events counts the cycles where at least two uop were executed. It is counted per thread.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "EventCode": "0xB1",
        "UMask": "0x1",
        "BriefDescription": "Cycles where at least 3 uops were executed per-thread",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED.CYCLES_GE_3_UOPS_EXEC",
        "CounterMask": "3",
        "Errata": "HSD144, HSD30, HSM31",
        "PublicDescription": "This events counts the cycles where at least three uop were executed. It is counted per thread.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "EventCode": "0xB1",
        "UMask": "0x1",
        "BriefDescription": "Cycles where at least 4 uops were executed per-thread.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED.CYCLES_GE_4_UOPS_EXEC",
        "CounterMask": "4",
        "Errata": "HSD144, HSD30, HSM31",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "EventCode": "0xB1",
        "UMask": "0x2",
        "BriefDescription": "Number of uops executed on the core.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED.CORE",
        "Errata": "HSD30, HSM31",
        "PublicDescription": "Counts total number of uops to be executed per-core each cycle.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xb1",
        "UMask": "0x2",
        "BriefDescription": "Cycles at least 1 micro-op is executed from any thread on physical core.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED.CORE_CYCLES_GE_1",
        "CounterMask": "1",
        "Errata": "HSD30, HSM31",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xb1",
        "UMask": "0x2",
        "BriefDescription": "Cycles at least 2 micro-op is executed from any thread on physical core.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED.CORE_CYCLES_GE_2",
        "CounterMask": "2",
        "Errata": "HSD30, HSM31",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xb1",
        "UMask": "0x2",
        "BriefDescription": "Cycles at least 3 micro-op is executed from any thread on physical core.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED.CORE_CYCLES_GE_3",
        "CounterMask": "3",
        "Errata": "HSD30, HSM31",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xb1",
        "UMask": "0x2",
        "BriefDescription": "Cycles at least 4 micro-op is executed from any thread on physical core.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED.CORE_CYCLES_GE_4",
        "CounterMask": "4",
        "Errata": "HSD30, HSM31",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "Invert": "1",
        "EventCode": "0xb1",
        "UMask": "0x2",
        "BriefDescription": "Cycles with no micro-ops executed from any thread on physical core.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_EXECUTED.CORE_CYCLES_NONE",
        "Errata": "HSD30, HSM31",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC0",
        "UMask": "0x0",
        "BriefDescription": "Number of instructions retired. General Counter   - architectural event",
        "Counter": "0,1,2,3",
        "EventName": "INST_RETIRED.ANY_P",
        "Errata": "HSD11, HSD140",
        "PublicDescription": "Number of instructions at retirement.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC0",
        "UMask": "0x1",
        "BriefDescription": "Precise instruction retired event with HW to reduce effect of PEBS shadow in IP distribution",
        "PEBS": "2",
        "Counter": "1",
        "EventName": "INST_RETIRED.PREC_DIST",
        "Errata": "HSD140",
        "PublicDescription": "Precise instruction retired event with HW to reduce effect of PEBS shadow in IP distribution.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "1"
    },
    {
        "EventCode": "0xC0",
        "UMask": "0x2",
        "BriefDescription": "FP operations retired. X87 FP operations that have no exceptions: Counts also flows that have several X87 or flows that use X87 uops in the exception handling.",
        "Counter": "0,1,2,3",
        "EventName": "INST_RETIRED.X87",
        "PublicDescription": "This is a non-precise version (that is, does not use PEBS) of the event that counts FP operations retired. For X87 FP operations that have no exceptions counting also includes flows that have several X87, or flows that use X87 uops in the exception handling.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC1",
        "UMask": "0x40",
        "BriefDescription": "Number of times any microcode assist is invoked by HW upon uop writeback.",
        "Counter": "0,1,2,3",
        "EventName": "OTHER_ASSISTS.ANY_WB_ASSIST",
        "PublicDescription": "Number of microcode assists invoked by HW upon uop writeback.",
        "SampleAfterValue": "100003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC2",
        "UMask": "0x1",
        "BriefDescription": "Actually retired uops.",
        "Data_LA": "1",
        "PEBS": "1",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_RETIRED.ALL",
        "PublicDescription": "Counts the number of micro-ops retired. Use Cmask=1 and invert to count active cycles or stalled cycles.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "Invert": "1",
        "EventCode": "0xC2",
        "UMask": "0x1",
        "BriefDescription": "Cycles without actually retired uops.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_RETIRED.STALL_CYCLES",
        "CounterMask": "1",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "Invert": "1",
        "EventCode": "0xC2",
        "UMask": "0x1",
        "BriefDescription": "Cycles with less than 10 actually retired uops.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_RETIRED.TOTAL_CYCLES",
        "CounterMask": "10",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "Invert": "1",
        "EventCode": "0xC2",
        "UMask": "0x1",
        "BriefDescription": "Cycles without actually retired uops.",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_RETIRED.CORE_STALL_CYCLES",
        "AnyThread": "1",
        "CounterMask": "1",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "EventCode": "0xC2",
        "UMask": "0x2",
        "BriefDescription": "Retirement slots used.",
        "PEBS": "1",
        "Counter": "0,1,2,3",
        "EventName": "UOPS_RETIRED.RETIRE_SLOTS",
        "PublicDescription": "This event counts the number of retirement slots used each cycle.  There are potentially 4 slots that can be used each cycle - meaning, 4 uops or 4 instructions could retire each cycle.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC3",
        "UMask": "0x1",
        "BriefDescription": "Cycles there was a Nuke. Account for both thread-specific and All Thread Nukes.",
        "Counter": "0,1,2,3",
        "EventName": "MACHINE_CLEARS.CYCLES",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EdgeDetect": "1",
        "EventCode": "0xC3",
        "UMask": "0x1",
        "BriefDescription": "Number of machine clears (nukes) of any type.",
        "Counter": "0,1,2,3",
        "EventName": "MACHINE_CLEARS.COUNT",
        "CounterMask": "1",
        "SampleAfterValue": "100003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC3",
        "UMask": "0x4",
        "BriefDescription": "Self-modifying code (SMC) detected.",
        "Counter": "0,1,2,3",
        "EventName": "MACHINE_CLEARS.SMC",
        "PublicDescription": "This event is incremented when self-modifying code (SMC) is detected, which causes a machine clear.  Machine clears can have a significant performance impact if they are happening frequently.",
        "SampleAfterValue": "100003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC3",
        "UMask": "0x20",
        "BriefDescription": "This event counts the number of executed Intel AVX masked load operations that refer to an illegal address range with the mask bits set to 0.",
        "Counter": "0,1,2,3",
        "EventName": "MACHINE_CLEARS.MASKMOV",
        "SampleAfterValue": "100003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC4",
        "UMask": "0x0",
        "BriefDescription": "All (macro) branch instructions retired.",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_RETIRED.ALL_BRANCHES",
        "PublicDescription": "Branch instructions at retirement.",
        "SampleAfterValue": "400009",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC4",
        "UMask": "0x1",
        "BriefDescription": "Conditional branch instructions retired.",
        "PEBS": "1",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_RETIRED.CONDITIONAL",
        "PublicDescription": "Counts the number of conditional branch instructions retired.",
        "SampleAfterValue": "400009",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC4",
        "UMask": "0x2",
        "BriefDescription": "Direct and indirect near call instructions retired.",
        "PEBS": "1",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_RETIRED.NEAR_CALL",
        "SampleAfterValue": "100003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC4",
        "UMask": "0x2",
        "BriefDescription": "Direct and indirect macro near call instructions retired (captured in ring 3).",
        "PEBS": "1",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_RETIRED.NEAR_CALL_R3",
        "SampleAfterValue": "100003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC4",
        "UMask": "0x4",
        "BriefDescription": "All (macro) branch instructions retired.",
        "PEBS": "2",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_RETIRED.ALL_BRANCHES_PEBS",
        "SampleAfterValue": "400009",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "EventCode": "0xC4",
        "UMask": "0x8",
        "BriefDescription": "Return instructions retired.",
        "PEBS": "1",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_RETIRED.NEAR_RETURN",
        "PublicDescription": "Counts the number of near return instructions retired.",
        "SampleAfterValue": "100003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC4",
        "UMask": "0x10",
        "BriefDescription": "Not taken branch instructions retired.",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_RETIRED.NOT_TAKEN",
        "PublicDescription": "Counts the number of not taken branch instructions retired.",
        "SampleAfterValue": "400009",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC4",
        "UMask": "0x20",
        "BriefDescription": "Taken branch instructions retired.",
        "PEBS": "1",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_RETIRED.NEAR_TAKEN",
        "PublicDescription": "Number of near taken branches retired.",
        "SampleAfterValue": "400009",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC4",
        "UMask": "0x40",
        "BriefDescription": "Far branch instructions retired.",
        "Counter": "0,1,2,3",
        "EventName": "BR_INST_RETIRED.FAR_BRANCH",
        "PublicDescription": "Number of far branches retired.",
        "SampleAfterValue": "100003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC5",
        "UMask": "0x0",
        "BriefDescription": "All mispredicted macro branch instructions retired.",
        "Counter": "0,1,2,3",
        "EventName": "BR_MISP_RETIRED.ALL_BRANCHES",
        "PublicDescription": "Mispredicted branch instructions at retirement.",
        "SampleAfterValue": "400009",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC5",
        "UMask": "0x1",
        "BriefDescription": "Mispredicted conditional branch instructions retired.",
        "PEBS": "1",
        "Counter": "0,1,2,3",
        "EventName": "BR_MISP_RETIRED.CONDITIONAL",
        "SampleAfterValue": "400009",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xC5",
        "UMask": "0x4",
        "BriefDescription": "Mispredicted macro branch instructions retired.",
        "PEBS": "2",
        "Counter": "0,1,2,3",
        "EventName": "BR_MISP_RETIRED.ALL_BRANCHES_PEBS",
        "PublicDescription": "This event counts all mispredicted branch instructions retired. This is a precise event.",
        "SampleAfterValue": "400009",
        "CounterHTOff": "0,1,2,3"
    },
    {
        "EventCode": "0xC5",
        "UMask": "0x20",
        "BriefDescription": "number of near branch instructions retired that were mispredicted and taken.",
        "PEBS": "1",
        "Counter": "0,1,2,3",
        "EventName": "BR_MISP_RETIRED.NEAR_TAKEN",
        "PublicDescription": "Number of near branch instructions retired that were taken but mispredicted.",
        "SampleAfterValue": "400009",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xCC",
        "UMask": "0x20",
        "BriefDescription": "Count cases of saving new LBR",
        "Counter": "0,1,2,3",
        "EventName": "ROB_MISC_EVENTS.LBR_INSERTS",
        "PublicDescription": "Count cases of saving new LBR records by hardware.",
        "SampleAfterValue": "2000003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    },
    {
        "EventCode": "0xe6",
        "UMask": "0x1f",
        "BriefDescription": "Counts the total number when the front end is resteered, mainly when the BPU cannot provide a correct prediction and this is corrected by other branch handling mechanisms at the front end.",
        "Counter": "0,1,2,3",
        "EventName": "BACLEARS.ANY",
        "PublicDescription": "Number of front end re-steers due to BPU misprediction.",
        "SampleAfterValue": "100003",
        "CounterHTOff": "0,1,2,3,4,5,6,7"
    }
]